import java.util.Scanner;
import java.util.Stack;
/*
 * stack 자료구조 
 */
public class Main{
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String s = sc.next();
		Stack<Character>st = new Stack<>();
		StringBuilder sb = new StringBuilder();
		for (int i = 0; i < s.length(); i++) {
			char c = s.charAt(i);
			int tmp = check(c);
			switch (c) {
			case '+':
			case '-':
			case '*':
			case '/':
				// 스택에 있는 연산자가 더 클 경우 빼내기
				while(!st.isEmpty() && check(st.peek())>= tmp) {
					sb.append(st.pop());
				}
				st.push(c);
				break;
			case '(':
				st.push(c);
				break;
			case ')':
				while(!st.isEmpty() && st.peek() != '(') {
					sb.append(st.pop());
				}
				// 마지막 괄호도 빼주기
				st.pop();
				break;
			default:
				sb.append(c);
				break;
			}
		}
		while(!st.isEmpty()) {
			sb.append(st.pop());
		}
		System.out.println(sb.toString());
	}

	private static int check(Character c) {
		// TODO Auto-generated method stub
		switch (c) {
		case '+':
		case '-':
			return 1;
		case '*':
		case '/':
			return 2;
		case '(':
		case ')':
			return 0;
		}
		return -1;
	}
}
